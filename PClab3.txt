// Write a OpenMP program to calculate n Fibonacci numbers using tasks.
#include <stdio.h>
#include <stdlib.h>
#include <omp.h>

// Recursive Fibonacci using OpenMP tasks
long long fib_task(int n) {
    if (n < 2)
        return n;
    long long x, y;
    #pragma omp task shared(x)
    x = fib_task(n - 1);
    #pragma omp task shared(y)
    y = fib_task(n - 2);
    #pragma omp taskwait
    return x + y;
}

int main() {
    int n;
    printf("Enter number of Fibonacci numbers to compute: ");
    scanf("%d", &n);
    long long *fib_array = (long long *)malloc(n * sizeof(long long));
    #pragma omp parallel
    {
        #pragma omp single
        {
            for (int i = 0; i < n; i++) {
                // Create a task for each Fibonacci number calculation
                #pragma omp task shared(fib_array)
                fib_array[i] = fib_task(i);
            }
        }
    }
    // Wait for all tasks to finish before printing
    #pragma omp taskwait
    printf("Fibonacci numbers:\n");
    for (int i = 0; i < n; i++) {
        printf("fib(%d) = %lld\n", i, fib_array[i]);
    }
    free(fib_array);
    return 0;
}

user@fedora:~$ gedit prog3.c
user@fedora:~$ gcc -fopenmp prog3.c -o program
user@fedora:~$ ./program
Enter number of Fibonacci numbers to compute: 9
Fibonacci numbers:
fib(0) = 0
fib(1) = 1
fib(2) = 1
fib(3) = 2
fib(4) = 3
fib(5) = 5
fib(6) = 8
fib(7) = 13
fib(8) = 21